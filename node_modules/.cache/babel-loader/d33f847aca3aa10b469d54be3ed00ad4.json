{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Formbox from './Formbox';\nimport Databox from './Databox';\nimport Login from './Login';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [isupdated, setIsupdated] = useState(false); // For the components (Formbox & Databox) to know if the data has been updated\n\n  let [modifiedId, setModifiedId] = useState(); // For the components to know what observation would the user want to modify\n\n  let token = false; // Major TODO's:\n  // Simple implementation of React router\n  // Fixing the barchart --DONE\n  // Exporting the barchart --DONE\n  // Visual appearance\n\n  Login();\n\n  if (token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Kansanterveystieteen perusteet -Unip\\xE4iv\\xE4kirja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Kirjaudu ulos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Formbox, {\n          setIsupdated: setIsupdated,\n          modifiedId: modifiedId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Databox, {\n          isupdated: isupdated,\n          setModifiedId: setModifiedId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Login, {\n    token: token\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"lZB7b+yjvqhtpuPgb7wPIba8YXE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/App.js"],"names":["React","useState","Formbox","Databox","Login","BrowserRouter","Route","Switch","App","isupdated","setIsupdated","modifiedId","setModifiedId","token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAAxC,CAFa,CAEoC;;AACjD,MAAI,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,EAA1C,CAHa,CAGiC;;AAC9C,MAAIY,KAAK,GAAG,KAAZ,CAJa,CAMb;AACA;AACA;AACA;AACA;;AAIAT,EAAAA,KAAK;;AAEL,MAAIS,KAAJ,EAAW;AACT,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,YAAY,EAAEH,YAAvB;AAAqC,UAAA,UAAU,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAEF,SAApB;AAA+B,UAAA,aAAa,EAAEG;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AACD,sBAAO,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEC;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AAED;;GAnCQL,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Formbox from './Formbox';\nimport Databox from './Databox';\nimport Login from './Login';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n  let [isupdated, setIsupdated] = useState(false); // For the components (Formbox & Databox) to know if the data has been updated\n  let [modifiedId, setModifiedId] = useState(); // For the components to know what observation would the user want to modify\n  let token = false;\n\n  // Major TODO's:\n  // Simple implementation of React router\n  // Fixing the barchart --DONE\n  // Exporting the barchart --DONE\n  // Visual appearance\n\n\n  \n  Login();\n\n  if (token) {\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <h4>Kansanterveystieteen perusteet -Unipäiväkirja</h4>\n          <button>Kirjaudu ulos</button>\n        </div>\n\n        <div className=\"content\">\n          <Formbox setIsupdated={setIsupdated} modifiedId={modifiedId} />\n          <Databox isupdated={isupdated} setModifiedId={setModifiedId} />\n        </div>\n\n        <div className=\"footer\"><h5>Footer</h5></div>\n      </div>\n    );\n  }\n  return <Login token={token} />\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}