{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './content.css'; // PNG DOWNLOAD\n\nimport { getPngData, useRechartToPng } from \"recharts-to-png\";\nimport { saveAs } from 'file-saver'; // PNG DOWNLOAD\n// React-tabs module\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport moment from 'moment'; // Module for date formatting\n// Recharts.js module\n\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Databox({\n  isupdated,\n  setModifiedId\n}) {\n  _s();\n\n  let [Email, setEmail] = useState('eerokos');\n  const [dataset, setDataset] = useState([]);\n  useEffect(() => {\n    getData();\n  }, [isupdated]); // PNG DOWNLOAD\n\n  const [png, ref] = useRechartToPng();\n  const handleDownload = React.useCallback(async () => {\n    saveAs(png, \"myChart.png\");\n  }, [png]); // PNG DOWNLOAD\n  // Fetching data from the server\n\n  async function getData() {\n    fetch('http://localhost:3000/' + Email).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).then(data => {\n      setDataset(data);\n      setModifiedId();\n    }) // Set fetched data to an array\n    .catch(error => console.error('Error:', error));\n  }\n\n  async function removeObs(obs) {\n    await fetch('http://localhost:3000/' + Email + '/' + obs.id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      getData();\n    }) // Refresh Array when obs deleted\n    .catch(error => console.error(\"error: \" + error));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Tabs, {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(TabList, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        children: \"Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        children: \"Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tosleep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fromsleep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TotalHours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataset.map((c, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: moment(c.tosleep).format(\"DD.MM.YYYY HH:mm\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: moment(c.fromsleep).format(\"DD.MM.YYYY HH:mm\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.totalHours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.range\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: alert(c.desd),\n              children: [c.desc.slice(0, 20), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setModifiedId(c.id),\n                children: \"Muokkaa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeObs(c),\n                children: \"Poista\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, c.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      children: [/*#__PURE__*/_jsxDEV(BarChart, {\n        width: 450,\n        height: 250,\n        data: dataset,\n        ref: ref,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"totalHours\",\n          name: \"Nukuttu aika tunteina\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"range\",\n          name: \"Unen laatu\",\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Lataa kuvio png-tiedostona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Databox, \"pzcIuzVBpDt+JyQCeSGrWcaNEsM=\", false, function () {\n  return [useRechartToPng];\n});\n\n_c = Databox;\nexport default Databox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Databox\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js"],"names":["React","useState","useEffect","getPngData","useRechartToPng","saveAs","Tab","Tabs","TabList","TabPanel","moment","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Bar","Cell","Legend","Databox","isupdated","setModifiedId","Email","setEmail","dataset","setDataset","getData","png","ref","handleDownload","useCallback","fetch","then","res","status","json","error","Error","data","catch","console","removeObs","obs","id","method","headers","map","c","index","tosleep","format","fromsleep","totalHours","range","alert","desd","desc","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './content.css';\n\n// PNG DOWNLOAD\nimport { getPngData, useRechartToPng } from \"recharts-to-png\";\nimport { saveAs } from 'file-saver';\n// PNG DOWNLOAD\n\n// React-tabs module\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport moment from 'moment'; // Module for date formatting\n\n// Recharts.js module\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell, Legend } from 'recharts';\n\nfunction Databox({ isupdated, setModifiedId }) {\n\n  let [Email, setEmail] = useState('eerokos');\n  const [dataset, setDataset] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, [isupdated]);\n\n  // PNG DOWNLOAD\n  const [png, ref] = useRechartToPng();\n  const handleDownload = React.useCallback(async () => {\n    saveAs(png, \"myChart.png\");\n  }, [png]);\n  // PNG DOWNLOAD\n\n  // Fetching data from the server\n  async function getData() {\n    fetch('http://localhost:3000/' + Email)\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .then(data => { setDataset(data); setModifiedId(); }) // Set fetched data to an array\n      .catch(error => console.error('Error:', error))\n  }\n\n  async function removeObs(obs) {\n    await fetch('http://localhost:3000/' + Email + '/' + obs.id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(() => { getData(); }) // Refresh Array when obs deleted\n      .catch(error => console.error(\"error: \" + error))\n  }\n\n  return (\n    <Tabs className=\"box\">\n      <TabList>\n        <Tab>Array</Tab>\n        <Tab>Graph</Tab>\n      </TabList>\n\n      <TabPanel>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Tosleep</th>\n              <th>Fromsleep</th>\n              <th>TotalHours</th>\n              <th>Range</th>\n            </tr>\n          </thead>\n          <tbody>\n            {dataset.map((c, index) =>\n              <tr key={c.id}>\n                <td>{c.id}</td>\n                <td>{moment(c.tosleep).format(\"DD.MM.YYYY HH:mm\")}</td>\n                <td>{moment(c.fromsleep).format(\"DD.MM.YYYY HH:mm\")}</td>\n                <td>{c.totalHours}</td>\n                <td>{c.range}</td>                \n                <td onClick={alert(c.desd)}>{c.desc.slice(0,20)}...</td>   \n                <td><button onClick={() => setModifiedId(c.id)}>Muokkaa</button></td>\n                <td><button onClick={() => removeObs(c)}>Poista</button></td>\n              </tr>)}\n          </tbody>\n        </table>\n      </TabPanel>\n\n      <TabPanel>\n        <BarChart width={450} height={250} data={dataset} ref={ref}>\n          <CartesianGrid />\n          <XAxis dataKey=\"id\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"totalHours\" name=\"Nukuttu aika tunteina\" fill=\"#8884d8\"/>\n          <Bar dataKey=\"range\" name=\"Unen laatu\" fill=\"#82ca9d\"/>\n        </BarChart>\n        <button onClick={handleDownload}>Lataa kuvio png-tiedostona</button>\n      </TabPanel>\n\n    </Tabs>\n  );\n}\n\nexport default Databox;\n"]},"metadata":{},"sourceType":"module"}