{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './content.css';\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Databox() {\n  _s();\n\n  let [Email, setEmail] = useState('eerokos');\n  let [data, setData] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    fetch('http://localhost:3000/' + Email).then(response => response.json()).catch(error => console.error('Error:', error)).then(response => {\n      setData(JSON.stringify(response));\n    });\n  }\n\n  function renderTable() {\n    if (data.length > 15) {\n      return data.map((obs, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: index.tosleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: index.fromsleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: index.totalHours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: index.range\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, obs.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this);\n      });\n    } else {\n      return null;\n    }\n  }\n  /*\n    function renderTableHeader() {\n      return data.map((key, index) => {\n        return <th key={index}>{key.toUpperCase()}</th>\n      })\n    }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), renderTable()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Databox, \"rmAqpnmBOVfA36nKulvBXsbswJI=\");\n\n_c = Databox;\nexport default Databox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Databox\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js"],"names":["React","useState","useEffect","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Bar","Cell","Databox","Email","setEmail","data","setData","getData","fetch","then","response","json","catch","error","console","JSON","stringify","renderTable","length","map","obs","index","id","tosleep","fromsleep","totalHours","range"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;AAGA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,OAAhD,EAAyDC,GAAzD,EAA8DC,IAA9D,QAA0E,UAA1E;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,SAAD,CAAhC;AACA,MAAI,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,OAAf,GAAyB;AACvBC,IAAAA,KAAK,CAAC,2BAA2BL,KAA5B,CAAL,CACGM,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGC,KAFH,CAESC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAFlB,EAGGJ,IAHH,CAGQC,QAAQ,IAAI;AAAEJ,MAAAA,OAAO,CAACS,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAD,CAAP;AAAmC,KAHzD;AAID;;AAED,WAASO,WAAT,GAAuB;AACrB,QAAIZ,IAAI,CAACa,MAAL,GAAc,EAAlB,EAAsB;AACpB,aAAOb,IAAI,CAACc,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC1B,4BACE;AAAA,kCACE;AAAA,sBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,sBAAKJ,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,WAASN,GAAG,CAACE,EAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVE,CAAP;AAWD,KAZD,MAYO;AACL,aAAO,IAAP;AACD;AAEF;AACD;AACF;AACA;AACA;AACA;AACA;;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGL,WAAW,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAxDQf,O;;KAAAA,O;AA0DT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './content.css';\n\n\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell } from 'recharts';\n\nfunction Databox() {\n\n  let [Email, setEmail] = useState('eerokos');\n  let [data, setData] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    fetch('http://localhost:3000/' + Email)\n      .then(response => response.json())\n      .catch(error => console.error('Error:', error))\n      .then(response => { setData(JSON.stringify(response)) });\n  }\n\n  function renderTable() {\n    if (data.length > 15) {\n      return data.map((obs, index) => {\n            return (\n              <tr key={obs.id} >\n                <td>{index.id}</td>\n                <td>{index.tosleep}</td>\n                <td>{index.fromsleep}</td>\n                <td>{index.totalHours}</td>\n                <td>{index.range}</td>\n              </tr>\n            )\n          })\n    } else {\n      return null;\n    }\n\n  }\n  /*\n    function renderTableHeader() {\n      return data.map((key, index) => {\n        return <th key={index}>{key.toUpperCase()}</th>\n      })\n    }*/\n\n\n\n  return (\n    <div className=\"box\">\n      <h1>Data</h1>\n\n      <table>\n        <tbody>\n          <tr></tr>\n          {renderTable()}\n        </tbody>\n      </table>\n\n    </div>\n  );\n}\n\nexport default Databox;"]},"metadata":{},"sourceType":"module"}