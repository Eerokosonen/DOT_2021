{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Formbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './content.css';\nimport DatePicker from 'react-datepicker';\nimport { registerLocale } from \"react-datepicker\";\nimport fi from 'date-fns/locale/fi';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\nimport InputRange from 'react-input-range';\nimport \"react-input-range/lib/css/index.css\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale('fi', fi);\n\nfunction Formbox() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm(); //Formissa kerättävä data:\n\n  let [rangevalue, setRangevalue] = useState(1);\n  let [tosleepvalue, setTosleepvalue] = useState(new Date());\n  let formattedtosleepvalue = moment(tosleepvalue).format(\"DD.MM.YYYY HH:mm\");\n  let [fromsleepvalue, setFromsleepvalue] = useState(new Date());\n  let formattedfromsleepvalue = moment(fromsleepvalue).format(\"DD.MM.YYYY HH:mm\");\n  let [desc, setDesc] = useState(); // Nukkumiseen käytetty aika selvitettävä, jotta voi\n\n  let totalsleeptime = String(fromsleepvalue - tosleepvalue);\n\n  const onSubmit = data => {\n    console.log('submittia = ' + JSON.stringify(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"K\\xE4vin nukkumaan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: tosleepvalue,\n        onChange: e => setTosleepvalue(e),\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        dateFormat: \"Pp\",\n        locale: \"fi\",\n        timeIntervals: 15,\n        ref: register({\n          name: 'tosleepvalue',\n          value: formattedtosleepvalue\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Her\\xE4sin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: fromsleepvalue,\n        onChange: e => setFromsleepvalue(e),\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        dateFormat: \"Pp\",\n        locale: \"fi\",\n        timeIntervals: 15,\n        ref: register({\n          name: 'fromleepvalue',\n          value: formattedfromsleepvalue\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Unen laatu:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputRange, {\n        maxValue: 5,\n        minValue: 1,\n        value: rangevalue,\n        onChange: e => setRangevalue(e),\n        ref: register({\n          name: 'range',\n          value: rangevalue\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sanallinen arvio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"desc\",\n        onChange: e => setDesc(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Tallenna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Formbox, \"4QgXzZV5Rl8okU02p582iVaUyg0=\", false, function () {\n  return [useForm];\n});\n\n_c = Formbox;\nexport default Formbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formbox\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Formbox.js"],"names":["React","useState","DatePicker","registerLocale","fi","moment","InputRange","useForm","Formbox","register","handleSubmit","watch","errors","rangevalue","setRangevalue","tosleepvalue","setTosleepvalue","Date","formattedtosleepvalue","format","fromsleepvalue","setFromsleepvalue","formattedfromsleepvalue","desc","setDesc","totalsleeptime","String","onSubmit","data","console","log","JSON","stringify","e","name","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './content.css';\n\nimport DatePicker from 'react-datepicker';\nimport { registerLocale } from \"react-datepicker\";\nimport fi from 'date-fns/locale/fi';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport moment from 'moment';\n\nimport InputRange from 'react-input-range';\nimport \"react-input-range/lib/css/index.css\";\n\nimport { useForm } from \"react-hook-form\";\n\nregisterLocale('fi', fi);\n\n\nfunction Formbox() {\n  const { register, handleSubmit, watch, errors } = useForm();\n\n\n  //Formissa kerättävä data:\n  let [rangevalue, setRangevalue] = useState(1);\n  \n  let [tosleepvalue, setTosleepvalue] = useState(new Date()); \n  let formattedtosleepvalue = moment(tosleepvalue).format(\"DD.MM.YYYY HH:mm\");\n\n  let [fromsleepvalue, setFromsleepvalue] = useState(new Date()); \n  let formattedfromsleepvalue = moment(fromsleepvalue).format(\"DD.MM.YYYY HH:mm\");\n\n  let [desc, setDesc] = useState();\n\n  // Nukkumiseen käytetty aika selvitettävä, jotta voi\n  let totalsleeptime = String(fromsleepvalue - tosleepvalue);\n\n\n  const onSubmit = data => {\n    console.log('submittia = ' +JSON.stringify(data));        \n  }\n\n  return (\n    <div className=\"box\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label>Kävin nukkumaan:</label>\n        <DatePicker\n          selected={tosleepvalue}   \n          onChange={e => setTosleepvalue(e)}           \n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          dateFormat=\"Pp\"  \n          locale=\"fi\"        \n          timeIntervals={15}          \n          ref={register({ name: 'tosleepvalue', value: formattedtosleepvalue })}      \n        />\n\n        <label>Heräsin:</label>\n        <DatePicker\n          selected={fromsleepvalue}  \n          onChange={e => setFromsleepvalue(e)} \n          showTimeSelect          \n          timeFormat=\"HH:mm\"\n          dateFormat=\"Pp\"\n          locale=\"fi\"          \n          timeIntervals={15}\n          ref={register({ name: 'fromleepvalue', value: formattedfromsleepvalue })}  \n        />\n        <br></br>\n        <label>Unen laatu:</label>\n        <InputRange           \n          maxValue={5}\n          minValue={1}\n          value={rangevalue}\n          onChange={e => setRangevalue(e)}\n          ref={register({ name: 'range', value: rangevalue })}  \n        />\n\n        <label>Sanallinen arvio:</label><br></br>\n        <textarea name=\"desc\" onChange={(e)=>setDesc(e)}></textarea>\n\n        <button type=\"submit\">Tallenna</button>    \n\n      </form>\n      \n\n    </div>\n  );\n}\n\nexport default Formbox;"]},"metadata":{},"sourceType":"module"}