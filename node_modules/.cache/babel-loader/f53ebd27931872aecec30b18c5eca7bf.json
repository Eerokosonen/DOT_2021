{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Formbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './content.css'; // Styling for Formbox & Databox components\n\nimport './App.css'; // Basic styling\n\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from \"react-datepicker\"; //import moment from 'moment'; // Module for date formatting\n\nimport InputRange from 'react-input-range'; // Range module for the slide input\n\nimport \"react-input-range/lib/css/index.css\";\nimport { useForm } from \"react-hook-form\"; // Form validation module\n\nimport fi from 'date-fns/locale/fi'; //Finnish formatting for date and time\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale('fi', fi);\n/**\nNaming policy:\n\nEmail\npassword\nid\ntoSleep\nfromSleep\ntotalHours\nrange \ndesc\n \n*/\n\n/*\nSimple REST API with Node.js json-server to read and write a local JSON file.\njson-server startup:\njson-server --watch obs.json\n\n*/\n\nfunction Formbox({\n  setIsupdated,\n  modifiedId,\n  Email\n}) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    reset\n  } = useForm();\n  useEffect(() => {\n    if (modifiedId !== undefined) fetchtomodify(modifiedId);\n  }, [modifiedId]); // Data collected on the form:\n\n  var yesterday = new Date(); // Initializing tosleep value to last night\n\n  yesterday.setDate(yesterday.getDate() - 1);\n  yesterday.setHours(20);\n  let [tosleep, setTosleep] = useState(yesterday);\n  let today = new Date(); // Initializing fromsleep value to this morning\n\n  today.setHours(7);\n  let [fromsleep, setFromsleep] = useState(today);\n  let [range, setRange] = useState(1);\n  let [desc, setDesc] = useState(''); // Calculating total sleeping hours  \n  //var totalHours = moment.utc(moment(fromsleep, \"HH:mm:ss\").diff(moment(tosleep, \"HH:mm:ss\"))).format(\"HH:mm\");\n\n  var totalHours = (fromsleep - tosleep) / 36e5; // When save-button is pressed we format the data  and post it to the server\n\n  const onSubmit = data => {\n    data.tosleep = tosleep;\n    data.fromsleep = fromsleep;\n    data.range = range;\n    data.desc = desc;\n    data.totalHours = totalHours;\n    console.log('submitted data = ' + JSON.stringify(data));\n\n    if (modifiedId === undefined) {\n      // If we post new obs      \n      postObs(data);\n    } else {\n      // If we modify a certain obs      \n      putObs(data, modifiedId);\n    }\n\n    setIsupdated(false);\n  }; // Post a new observation:\n\n\n  async function postObs(data) {\n    await fetch('http://localhost:3000/' + Email, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(() => {\n      formreset();\n      setIsupdated(true);\n    }).catch(error => console.error(\"error: \" + error));\n  } // Fetch the right observation to modify\n\n\n  async function fetchtomodify(id) {\n    console.log('modifying with ID ' + id);\n    fetch('http://localhost:3000/' + Email + '/' + id).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).then(data => {\n      // Set fetched data to the form\n      setTosleep(new Date(data.tosleep));\n      setFromsleep(new Date(data.fromsleep));\n      setRange(data.range);\n      setDesc(data.desc);\n    }).catch(error => console.error('Error:', error));\n  } // Modify an existing observation:\n\n\n  async function putObs(data, modifiedId) {\n    await fetch('http://localhost:3000/' + Email + '/' + modifiedId, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(() => {\n      formreset();\n      setIsupdated(true);\n    }).catch(error => console.error(\"error: \" + error));\n  }\n\n  let formreset = () => {\n    setTosleep(yesterday);\n    setFromsleep(today);\n    setRange(1);\n    setDesc('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"K\\xE4vin nukkumaan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: tosleep,\n        onChange: e => setTosleep(e),\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        dateFormat: \"Pp\",\n        locale: \"fi\",\n        timeIntervals: 15,\n        ref: register({\n          name: 'tosleep',\n          value: tosleep\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Her\\xE4sin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: fromsleep,\n        onChange: e => setFromsleep(e),\n        minDate: tosleep,\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        dateFormat: \"Pp\",\n        locale: \"fi\",\n        timeIntervals: 15,\n        ref: register({\n          name: 'fromsleep',\n          value: fromsleep\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Unen laatu:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputRange, {\n        value: range,\n        name: \"range\",\n        style: {\n          width: '50%'\n        },\n        onChange: e => setRange(e),\n        maxValue: 5,\n        minValue: 1,\n        ref: register({\n          name: 'range',\n          value: range\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sanallinen arvio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Vapaa kuvaus nukutusta y\\xF6st\\xE4, ja sen vaikutuksista p\\xE4iv\\xE4n vireystilaan\",\n        onChange: e => setDesc(e.target.value),\n        value: desc,\n        ref: register({\n          name: 'desc',\n          value: desc\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Tallenna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: formreset,\n      children: \"Tyhjenn\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Formbox, \"QV3L7ZdMZzoycUqiCmNb4yMM9SA=\", false, function () {\n  return [useForm];\n});\n\n_c = Formbox;\nexport default Formbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formbox\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Formbox.js"],"names":["React","useState","useEffect","DatePicker","registerLocale","InputRange","useForm","fi","Formbox","setIsupdated","modifiedId","Email","register","handleSubmit","watch","errors","reset","undefined","fetchtomodify","yesterday","Date","setDate","getDate","setHours","tosleep","setTosleep","today","fromsleep","setFromsleep","range","setRange","desc","setDesc","totalHours","onSubmit","data","console","log","JSON","stringify","postObs","putObs","fetch","method","headers","body","then","formreset","catch","error","id","res","status","json","Error","e","name","value","width","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './content.css'; // Styling for Formbox & Databox components\nimport './App.css'; // Basic styling\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from \"react-datepicker\";\n\n//import moment from 'moment'; // Module for date formatting\n\nimport InputRange from 'react-input-range'; // Range module for the slide input\nimport \"react-input-range/lib/css/index.css\";\n\nimport { useForm } from \"react-hook-form\"; // Form validation module\n\nimport fi from 'date-fns/locale/fi'; //Finnish formatting for date and time\n\nregisterLocale('fi', fi);\n\n/**\nNaming policy:\n\nEmail\npassword\nid\ntoSleep\nfromSleep\ntotalHours\nrange \ndesc\n \n*/\n\n/*\nSimple REST API with Node.js json-server to read and write a local JSON file.\njson-server startup:\njson-server --watch obs.json\n\n*/\n\nfunction Formbox({ setIsupdated, modifiedId, Email }) {\n  const { register, handleSubmit, watch, errors, reset } = useForm();\n\n  useEffect(() => {\n    if (modifiedId !== undefined)\n      fetchtomodify(modifiedId);\n  }, [modifiedId]);\n\n  // Data collected on the form:\n\n  var yesterday = new Date();  // Initializing tosleep value to last night\n  yesterday.setDate(yesterday.getDate() - 1);\n  yesterday.setHours(20);\n  let [tosleep, setTosleep] = useState(yesterday);\n\n  let today = new Date(); // Initializing fromsleep value to this morning\n  today.setHours(7);\n  let [fromsleep, setFromsleep] = useState(today);\n\n  let [range, setRange] = useState(1);\n  let [desc, setDesc] = useState('');\n\n  // Calculating total sleeping hours  \n  //var totalHours = moment.utc(moment(fromsleep, \"HH:mm:ss\").diff(moment(tosleep, \"HH:mm:ss\"))).format(\"HH:mm\");\n  var totalHours = (fromsleep - tosleep) / 36e5;\n\n  // When save-button is pressed we format the data  and post it to the server\n  const onSubmit = data => {\n    data.tosleep = tosleep;\n    data.fromsleep = fromsleep;\n    data.range = range;\n    data.desc = desc;\n    data.totalHours = totalHours;\n    console.log('submitted data = ' + JSON.stringify(data));\n\n    if (modifiedId === undefined) { // If we post new obs      \n      postObs(data);\n    } else { // If we modify a certain obs      \n      putObs(data, modifiedId);\n    }\n    setIsupdated(false);\n  }\n\n  // Post a new observation:\n  async function postObs(data) {\n    await fetch('http://localhost:3000/' + Email, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(() => { formreset(); setIsupdated(true); })\n      .catch(error => console.error(\"error: \" + error))\n  }\n\n  // Fetch the right observation to modify\n  async function fetchtomodify(id) {\n    console.log('modifying with ID ' + id);\n\n    fetch('http://localhost:3000/' + Email + '/' + id)\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .then(data => { // Set fetched data to the form\n        setTosleep(new Date(data.tosleep));\n        setFromsleep(new Date(data.fromsleep));\n        setRange(data.range);\n        setDesc(data.desc);\n      })\n      .catch(error => console.error('Error:', error))\n  }\n\n  // Modify an existing observation:\n  async function putObs(data, modifiedId) {\n    await fetch('http://localhost:3000/' + Email + '/' + modifiedId, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(() => { formreset(); setIsupdated(true); })\n      .catch(error => console.error(\"error: \" + error))\n  }\n\n\n  let formreset = () => {\n    setTosleep(yesterday);\n    setFromsleep(today);\n    setRange(1);\n    setDesc('');\n  }\n\n  return (\n    <div className=\"box\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label>Kävin nukkumaan:</label><br></br>\n        <DatePicker\n          selected={tosleep}\n          onChange={e => setTosleep(e)}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          dateFormat=\"Pp\"\n          locale=\"fi\"\n          timeIntervals={15}\n          ref={register({ name: 'tosleep', value: tosleep })}\n        />\n\n        <br></br><label>Heräsin:</label><br></br>\n        <DatePicker\n          selected={fromsleep}\n          onChange={e => setFromsleep(e)}\n          minDate={tosleep}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          dateFormat=\"Pp\"\n          locale=\"fi\"\n          timeIntervals={15}\n          ref={register({ name: 'fromsleep', value: fromsleep })}\n        />\n        <br></br>\n        <label>Unen laatu:</label>\n\n        <InputRange\n          value={range}\n          name=\"range\"\n          style={{ width: '50%' }}\n          onChange={e => setRange(e)}\n          maxValue={5}\n          minValue={1}\n          ref={register({ name: 'range', value: range })}\n        />\n\n        <label>Sanallinen arvio:</label><br></br>\n        <textarea\n          placeholder='Vapaa kuvaus nukutusta yöstä, ja sen vaikutuksista päivän vireystilaan'\n          onChange={(e) => setDesc(e.target.value)}\n          value={desc}\n          ref={register({ name: 'desc', value: desc })}\n        ></textarea>\n        <br></br>\n\n        <button type=\"submit\">Tallenna</button>        \n      </form>\n      <button onClick={formreset}>Tyhjennä</button>\n    </div>\n  );\n}\n\nexport default Formbox;"]},"metadata":{},"sourceType":"module"}