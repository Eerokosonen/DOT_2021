{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './content.css'; // React-tabs Module\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css'; //import { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell } from 'recharts';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Databox() {\n  _s();\n\n  let [Email, setEmail] = useState('eerokos');\n  const [dataset, setDataset] = useState([]);\n  let tabledata = [];\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    fetch('http://localhost:3000/' + Email).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).then(data => {\n      setDataset(data);\n      console.log(data);\n      tabledata = data.map((c, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.tosleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.formsleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.totalHours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.range\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)]\n        }, c.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this);\n      });\n    }).then(() => {}).catch(error => console.error('Error:', error));\n  }\n\n  async function fetchTabledata() {\n    console.log('fetching table data:' + dataset);\n    tabledata = dataset.map((c, index) => {\n      /*#__PURE__*/\n      _jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: c.tosleep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: c.formsleep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: c.totalHours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: c.range\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, c.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Tabs, {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(TabList, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        children: \"Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        children: \"Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tabledata\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Databox, \"kZ67dCK/vscx8i4jXK+mJakQOFo=\");\n\n_c = Databox;\nexport default Databox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Databox\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js"],"names":["React","useState","useEffect","Tab","Tabs","TabList","TabPanel","Databox","Email","setEmail","dataset","setDataset","tabledata","getData","fetch","then","res","status","json","error","Error","data","console","log","map","c","index","tosleep","formsleep","totalHours","range","id","catch","fetchTabledata"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './content.css';\n\n// React-tabs Module\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\n\n//import { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell } from 'recharts';\n\nfunction Databox() {\n\n  let [Email, setEmail] = useState('eerokos');\n  const [dataset, setDataset] = useState([]);\n  let tabledata = [];\n\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    fetch('http://localhost:3000/' + Email)\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .then(data => { setDataset(data); console.log(data); tabledata = data.map((c, index) => {\n        <tr key={c.id}>\n          <td>{c.tosleep}</td>\n          <td>{c.formsleep}</td>\n          <td>{c.totalHours}</td>\n          <td>{c.range}</td>\n        </tr>\n      });  })\n      .then(() => {   })\n      .catch(error => console.error('Error:', error))\n  }\n  \n  async function fetchTabledata(){\n    console.log('fetching table data:' + dataset);\n    tabledata = dataset.map((c, index) => {\n      <tr key={c.index}>\n        <td>{c.tosleep}</td>\n        <td>{c.formsleep}</td>\n        <td>{c.totalHours}</td>\n        <td>{c.range}</td>\n      </tr>\n    });\n  }\n  \n\n\n\n  return (\n    <Tabs className=\"box\">\n      <TabList>\n        <Tab>Array</Tab>\n        <Tab>Graph</Tab>\n      </TabList>\n\n      <TabPanel>\n        <table>\n          <tbody>\n            {tabledata}\n          </tbody>\n        </table>\n      </TabPanel>\n      <TabPanel>\n\n      </TabPanel>\n    </Tabs>\n  );\n}\n\nexport default Databox;"]},"metadata":{},"sourceType":"module"}