{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './content.css';\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Databox() {\n  _s();\n\n  let [Email, setEmail] = useState('eerokos');\n  let [data, setData] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    fetch('http://localhost:3000/' + Email).then(response => response.json()).catch(error => console.error('Error:', error)).then(response => {\n      setData(JSON.stringify(response));\n    });\n  }\n\n  function renderTable() {\n    return data.map((obs, index) => {\n      const {\n        id,\n        tosleep,\n        fromsleep,\n        totalHours,\n        range\n      } = obs;\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: tosleep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: fromsleep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: totalHours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: range\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  function renderTableHeader() {\n    let header = Object.keys(data[0]);\n    return header.map((key, index) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: key.toUpperCase()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: renderTableHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), renderTable()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Databox, \"rmAqpnmBOVfA36nKulvBXsbswJI=\");\n\n_c = Databox;\nexport default Databox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Databox\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js"],"names":["React","useState","useEffect","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Bar","Cell","Databox","Email","setEmail","data","setData","getData","fetch","then","response","json","catch","error","console","JSON","stringify","renderTable","map","obs","index","id","tosleep","fromsleep","totalHours","range","renderTableHeader","header","Object","keys","key","toUpperCase","list"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;AAGA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,OAAhD,EAAyDC,GAAzD,EAA8DC,IAA9D,QAA0E,UAA1E;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,SAAD,CAAhC;AACA,MAAI,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,OAAf,GAAyB;AACvBC,IAAAA,KAAK,CAAC,2BAA2BL,KAA5B,CAAL,CACGM,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGC,KAFH,CAESC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAFlB,EAGGJ,IAHH,CAGQC,QAAQ,IAAI;AAAEJ,MAAAA,OAAO,CAACS,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAD,CAAP;AAAmC,KAHzD;AAID;;AAED,WAASO,WAAT,GAAuB;AACrB,WAAOZ,IAAI,CAACa,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,OAAN;AAAeC,QAAAA,SAAf;AAA0BC,QAAAA,UAA1B;AAAsCC,QAAAA;AAAtC,UAAgDN,GAAtD;AACA,0BACE;AAAA,gCACE;AAAA,oBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAASJ,EAAT;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAXM,CAAP;AAYD;;AAED,WAASK,iBAAT,GAA6B;AAC3B,QAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYxB,IAAI,CAAC,CAAD,CAAhB,CAAb;AACA,WAAOsB,MAAM,CAACT,GAAP,CAAW,CAACY,GAAD,EAAMV,KAAN,KAAgB;AAChC,0BAAO;AAAA,kBAAiBU,GAAG,CAACC,WAAJ;AAAjB,SAASX,KAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD;;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIY;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAA,6BACE;AAAA,gCACE;AAAA,oBAAKN,iBAAiB;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGT,WAAW,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtDQf,O;;KAAAA,O;AAwDT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './content.css';\n\n\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell } from 'recharts';\n\nfunction Databox() {\n\n  let [Email, setEmail] = useState('eerokos');\n  let [data, setData] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    fetch('http://localhost:3000/' + Email)\n      .then(response => response.json())\n      .catch(error => console.error('Error:', error))\n      .then(response => { setData(JSON.stringify(response)) });\n  }\n\n  function renderTable() {\n    return data.map((obs, index) => {\n      const { id, tosleep, fromsleep, totalHours, range } = obs \n      return (\n        <tr key={id}>\n          <td>{id}</td>\n          <td>{tosleep}</td>\n          <td>{fromsleep}</td>\n          <td>{totalHours}</td>\n          <td>{range}</td>\n        </tr>\n      )\n    })\n  }\n\n  function renderTableHeader() {\n    let header = Object.keys(data[0]);\n    return header.map((key, index) => {\n      return <th key={index}>{key.toUpperCase()}</th>\n    })\n  }\n\n\n\n  return (\n    <div className=\"box\">\n      <h1>Data</h1>\n      <p>{list}</p>\n\n      <table>\n        <tbody>\n          <tr>{renderTableHeader()}</tr>\n          {renderTable()}\n        </tbody>\n      </table>\n\n    </div>\n  );\n}\n\nexport default Databox;"]},"metadata":{},"sourceType":"module"}