{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './content.css'; // React-tabs module\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css'; // Recharts.js module\n\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Databox({\n  isupdated\n}) {\n  _s();\n\n  let [Email, setEmail] = useState('eerokos');\n  const [dataset, setDataset] = useState([]);\n  useEffect(() => {\n    getData();\n  }, [isupdated]); // Fetching data from the server\n\n  async function getData() {\n    fetch('http://localhost:3000/' + Email).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).then(data => {\n      setDataset(data);\n      console.log(data);\n    }).catch(error => console.error('Error:', error));\n  }\n\n  async function removeObs(obs) {\n    await fetch('http://localhost:3000/' + Email + '/' + obs.id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      getData();\n    }).catch(error => console.error(\"error: \" + error));\n  }\n\n  function modifyObs(c) {\n    console.log('modify with id: ' + c.id); // TODO:\n    // Send the id to Formbox -> fetch data with id to form -> PUSH instead of POST\n  }\n\n  const usableData = {};\n  Object.keys(dataset).forEach(s => {\n    data[s].forEach(d => {\n      const x = d[xAxis];\n      const y = d[yAxis];\n      let entry = usableData[x];\n      if (!entry) entry = {};\n      Object.assign(entry, {\n        \"xAxis\": x,\n        [s]: y\n      });\n      usableData[x] = entry;\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Tabs, {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(TabList, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        children: \"Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        children: \"Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tosleep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fromsleep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TotalHours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataset.map((c, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.tosleep\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.fromsleep\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.totalHours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.range\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => modifyObs(c),\n              children: \"Muokkaa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeObs(c),\n              children: \"Poista\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, c.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 450,\n        height: 250,\n        data: Object.values(usableData),\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"totalHours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), Object.keys(dataset).map((c, index) => /*#__PURE__*/_jsxDEV(Bar, {\n          label: c.id,\n          dataKey: c.totalHours\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Databox, \"kZ67dCK/vscx8i4jXK+mJakQOFo=\");\n\n_c = Databox;\nexport default Databox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Databox\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js"],"names":["React","useState","useEffect","Tab","Tabs","TabList","TabPanel","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Bar","Cell","Legend","Databox","isupdated","Email","setEmail","dataset","setDataset","getData","fetch","then","res","status","json","error","Error","data","console","log","catch","removeObs","obs","id","method","headers","modifyObs","c","usableData","Object","keys","forEach","s","d","x","xAxis","y","yAxis","entry","assign","map","index","tosleep","fromsleep","totalHours","range","values"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './content.css';\n\n// React-tabs module\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\n// Recharts.js module\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell, Legend } from 'recharts';\n\nfunction Databox({ isupdated }) {\n\n  let [Email, setEmail] = useState('eerokos');\n  const [dataset, setDataset] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, [isupdated]);\n\n  // Fetching data from the server\n  async function getData() {\n    fetch('http://localhost:3000/' + Email)\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .then(data => { setDataset(data); console.log(data); })\n      .catch(error => console.error('Error:', error))\n  }\n\n  async function removeObs(obs) {\n    await fetch('http://localhost:3000/' + Email + '/' + obs.id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(() => { getData(); })\n      .catch(error => console.error(\"error: \" + error))\n  }\n\n  function modifyObs(c) {\n    console.log('modify with id: ' + c.id);\n    // TODO:\n    // Send the id to Formbox -> fetch data with id to form -> PUSH instead of POST\n  }\n\n\n  const usableData = {};\n  Object.keys(dataset).forEach((s) => {\n    data[s].forEach(d => {\n      const x = d[xAxis];\n      const y = d[yAxis];\n      let entry = usableData[x];\n      if (!entry) entry = {};\n      Object.assign(entry, { \"xAxis\": x, [s]: y });\n      usableData[x] = entry;\n    })\n  });\n\n  return (\n    <Tabs className=\"box\">\n      <TabList>\n        <Tab>Array</Tab>\n        <Tab>Graph</Tab>\n      </TabList>\n\n      <TabPanel>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Tosleep</th>\n              <th>Fromsleep</th>\n              <th>TotalHours</th>\n              <th>Range</th>\n            </tr>\n          </thead>\n          <tbody>\n            {dataset.map((c, index) =>\n              <tr key={c.id}>\n                <td>{c.id}</td>\n                <td>{c.tosleep}</td>\n                <td>{c.fromsleep}</td>\n                <td>{c.totalHours}</td>\n                <td>{c.range}</td>\n                <button onClick={() => modifyObs(c)}>Muokkaa</button>\n                <button onClick={() => removeObs(c)}>Poista</button>\n              </tr>)}\n          </tbody>\n        </table>\n      </TabPanel>\n\n      <TabPanel>\n        <BarChart width={450} height={250} data={Object.values(usableData)}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"id\" />\n          <YAxis dataKey=\"totalHours\" />\n          <Tooltip />\n          <Legend />\n          \n            {Object.keys(dataset).map((c, index) =>\n              <Bar label={c.id} dataKey={c.totalHours} key={index} />\n            )}\n          \n        </BarChart>\n      </TabPanel>\n\n\n    </Tabs>\n  );\n}\n\nexport default Databox;\n"]},"metadata":{},"sourceType":"module"}