{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './content.css'; // Styling for Formbox & Databox components\n\nimport './App.css'; // Basic styling\n\nimport { FaEdit, FaTrashAlt, FaInfoCircle } from \"react-icons/fa\"; // PNG DOWNLOAD\n\nimport { useRechartToPng } from \"recharts-to-png\";\nimport { saveAs } from 'file-saver'; // PNG DOWNLOAD\n\nimport Modal from 'react-modal'; // React-tabs module\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport moment from 'moment'; // Module for date formatting\n// Recharts.js module\n\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Databox({\n  isupdated,\n  setModifiedId,\n  Email\n}) {\n  _s();\n\n  const [dataset, setDataset] = useState([]);\n  let [modalOpen, setModalOpen] = useState(false);\n  let [modaldata, setModaldata] = useState();\n  useEffect(() => {\n    getData();\n  }, [isupdated]); // PNG Download\n\n  const [png, ref] = useRechartToPng();\n  const handleDownload = React.useCallback(async () => {\n    saveAs(png, \"myChart.png\");\n  }, [png]); // PNG Download\n  // Fetching data from the server\n\n  async function getData() {\n    fetch('http://localhost:3000/' + Email).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).then(data => {\n      setDataset(data);\n      setModifiedId();\n    }) // Set fetched data to an array\n    .catch(error => console.error('Error:', error));\n  }\n\n  async function removeObs(obs) {\n    await fetch('http://localhost:3000/' + Email + '/' + obs.id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      getData();\n    }) // Refresh Array when obs deleted\n    .catch(error => console.error(\"error: \" + error));\n  }\n\n  async function openObs(id) {\n    await fetch('http://localhost:3000/' + Email + '/' + id).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).then(data => {\n      openModal(data);\n    }) // Set fetched data to an array\n    .catch(error => console.error('Error:', error));\n  }\n\n  function openModal(data) {\n    setModalOpen(true);\n    fillmodaldata(data);\n  }\n\n  function fillmodaldata(data) {\n    setModaldata( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Havainnon numero:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), \" \", data.id, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Nukkumaan k\\xE4yty:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), \" \", moment(data.tosleep).format(\"DD.MM.YYYY HH:mm\"), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 87\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 96\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Her\\xE4tty:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), \" \", moment(data.fromsleep).format(\"DD.MM.YYYY HH:mm\"), \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Nukuttu aika tunteina:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), \" \", data.totalHours, \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Koettu unen laatu:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), \" \", data.range, \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Kuvaus unen vaikutuksista p\\xE4iv\\xE4\\xE4n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), \" \", data.desc, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 66\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 75\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this));\n  }\n\n  function closeModal() {\n    setModalOpen(false);\n  }\n\n  const formattosleep = tickItem => {\n    return moment(tickItem).format(\"DD.MM\");\n  };\n\n  const formathours = tickItem => {\n    return tickItem + 'h';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tabs, {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(TabList, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        children: \"Taulukko\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        children: \"Graafi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Havainto nro:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nukkumaan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Her\\xE4tty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nukuttu aika\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Unen laatu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataset.map((c, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openObs(c.id),\n                children: /*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: moment(c.tosleep).format(\"DD.MM.YYYY HH:mm\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: moment(c.fromsleep).format(\"DD.MM.YYYY HH:mm\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.totalHours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: c.range\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setModifiedId(c.id),\n                children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeObs(c),\n                children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, c.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      children: [/*#__PURE__*/_jsxDEV(BarChart, {\n        width: 450,\n        height: 250,\n        data: dataset,\n        ref: ref,\n        className: \"barchart\",\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"tosleep\",\n          tickFormatter: formattosleep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormatter: formathours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"totalHours\",\n          name: \"Nukuttu aika tunteina\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"range\",\n          name: \"Unen laatu\",\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonstyling\",\n        onClick: handleDownload,\n        className: \"pngbutton\",\n        children: \"Lataa kuvio png-tiedostona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      ariaHideApp: false,\n      isOpen: modalOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Modal\",\n      className: \"modal\",\n      children: [modaldata, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonstyling\",\n        onClick: closeModal,\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Databox, \"uAYga8BuAnz2Ct9NKW713qYXZq4=\", false, function () {\n  return [useRechartToPng];\n});\n\n_c = Databox;\nexport default Databox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Databox\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Databox.js"],"names":["React","useState","useEffect","FaEdit","FaTrashAlt","FaInfoCircle","useRechartToPng","saveAs","Modal","Tab","Tabs","TabList","TabPanel","moment","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Bar","Legend","Databox","isupdated","setModifiedId","Email","dataset","setDataset","modalOpen","setModalOpen","modaldata","setModaldata","getData","png","ref","handleDownload","useCallback","fetch","then","res","status","json","error","Error","data","catch","console","removeObs","obs","id","method","headers","openObs","openModal","fillmodaldata","tosleep","format","fromsleep","totalHours","range","desc","closeModal","formattosleep","tickItem","formathours","map","c","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './content.css'; // Styling for Formbox & Databox components\nimport './App.css'; // Basic styling\n\nimport { FaEdit, FaTrashAlt, FaInfoCircle } from \"react-icons/fa\";\n\n// PNG DOWNLOAD\nimport { useRechartToPng } from \"recharts-to-png\";\nimport { saveAs } from 'file-saver';\n// PNG DOWNLOAD\n\nimport Modal from 'react-modal';\n\n// React-tabs module\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport moment from 'moment'; // Module for date formatting\n\n// Recharts.js module\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Legend } from 'recharts';\n\n\nfunction Databox({ isupdated, setModifiedId, Email }) {\n  \n  const [dataset, setDataset] = useState([]);\n  let [modalOpen, setModalOpen] = useState(false);\n  let [modaldata, setModaldata] = useState();\n\n  useEffect(() => {\n    getData();\n  }, [isupdated]);\n\n  // PNG Download\n  const [png, ref] = useRechartToPng();\n  const handleDownload = React.useCallback(async () => {\n    saveAs(png, \"myChart.png\");\n  }, [png]);\n  // PNG Download\n\n  // Fetching data from the server\n  async function getData() {\n    fetch('http://localhost:3000/' + Email)\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .then(data => { setDataset(data); setModifiedId(); }) // Set fetched data to an array\n      .catch(error => console.error('Error:', error))\n  }\n\n  async function removeObs(obs) {\n    await fetch('http://localhost:3000/' + Email + '/' + obs.id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(() => { getData(); }) // Refresh Array when obs deleted\n      .catch(error => console.error(\"error: \" + error))\n  }\n\n  async function openObs(id) {\n    await fetch('http://localhost:3000/' + Email + '/' + id,)\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .then(data => { openModal(data) }) // Set fetched data to an array\n      .catch(error => console.error('Error:', error))\n  }\n\n  function openModal(data) {\n    setModalOpen(true);\n    fillmodaldata(data);\n  }\n\n  function fillmodaldata(data) {\n    setModaldata(\n      <p>\n            <b>Havainnon numero:</b> {data.id}.<br></br><br/>\n            <b>Nukkumaan käyty:</b> {moment(data.tosleep).format(\"DD.MM.YYYY HH:mm\")}.<br></br><br/>\n            <b>Herätty:</b> {moment(data.fromsleep).format(\"DD.MM.YYYY HH:mm\")}. <br></br><br/>\n            <b>Nukuttu aika tunteina:</b> {data.totalHours}. <br></br><br/>\n            <b>Koettu unen laatu:</b> {data.range}. <br></br><br/>\n            <b>Kuvaus unen vaikutuksista päivään:</b> {data.desc}<br></br><br/>\n      </p>\n\n    )\n  }\n\n  function closeModal() {\n    setModalOpen(false);\n  }\n\n  const formattosleep = (tickItem) => {\n    return moment(tickItem).format(\"DD.MM\");\n  }\n\n  const formathours = (tickItem) => {\n    return tickItem+'h';\n  }\n\n\n  return (\n    <Tabs className=\"box\">\n      <TabList>\n        <Tab>Taulukko</Tab>\n        <Tab>Graafi</Tab>\n      </TabList>\n\n      <TabPanel>\n        <table>\n          <thead>\n            <tr>\n              <th></th>\n              <th>Havainto nro:</th>\n              <th>Nukkumaan</th>\n              <th>Herätty</th>\n              <th>Nukuttu aika</th>\n              <th>Unen laatu</th>              \n            </tr>\n          </thead>\n          <tbody>\n            {dataset.map((c, index) =>\n              <tr key={c.id}>\n                <td><button onClick={() => openObs(c.id)}><FaInfoCircle/></button></td>\n                <td>{c.id}</td>\n                <td>{moment(c.tosleep).format(\"DD.MM.YYYY HH:mm\")}</td>\n                <td>{moment(c.fromsleep).format(\"DD.MM.YYYY HH:mm\")}</td>\n                <td>{c.totalHours}</td>\n                <td>{c.range}</td>\n                <td>\n                  <button onClick={() => setModifiedId(c.id)}><FaEdit/></button>\n                </td>\n                <td><button onClick={() => removeObs(c)}><FaTrashAlt/></button></td>\n              </tr>)}\n          </tbody>\n        </table>\n      </TabPanel>\n\n      <TabPanel>\n        <BarChart width={450} height={250} data={dataset} ref={ref} className=\"barchart\">\n          <CartesianGrid />\n          <XAxis dataKey=\"tosleep\" tickFormatter={formattosleep} />\n          <YAxis tickFormatter={formathours}/>\n          <Tooltip/>\n          <Legend/>\n          <Bar dataKey=\"totalHours\" name=\"Nukuttu aika tunteina\" fill=\"#8884d8\" />\n          <Bar dataKey=\"range\" name=\"Unen laatu\" fill=\"#82ca9d\" />\n        </BarChart>\n        <button className=\"buttonstyling\" onClick={handleDownload} className=\"pngbutton\">Lataa kuvio png-tiedostona</button>\n      </TabPanel>\n\n      <Modal  ariaHideApp={false} isOpen={modalOpen} onRequestClose={closeModal} contentLabel=\"Modal\" className=\"modal\">\n        {modaldata}\n        <button className=\"buttonstyling\" onClick={closeModal}>close</button>\n      </Modal>\n\n    </Tabs>\n  );\n}\n\n\n\nexport default Databox;\n"]},"metadata":{},"sourceType":"module"}