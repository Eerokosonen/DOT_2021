{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Formbox from './Formbox';\nimport Databox from './Databox';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    reset\n  } = useForm();\n  let [username, setUsername] = useState('');\n  let [passwrd, setPasswrd] = useState('');\n\n  const onSubmit = data => {\n    data.username = username;\n    data.passwrd = passwrd;\n    console.log(data);\n    auth();\n\n    function auth() {\n      if (data.username === 'eerokos@uef.fi' && data.passwrd === '123') {\n        token = true;\n        console.log(token);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"K\\xE4ytt\\xE4j\\xE4tunnus:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"@UEF.fi-s\\xE4hk\\xF6posti\",\n        type: \"text\",\n        onChange: e => setUsername(e.target.value),\n        value: username,\n        ref: register({\n          name: 'username',\n          value: username\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Salasana:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setPasswrd(e.target.value),\n        value: passwrd,\n        ref: register({\n          name: 'passwrd',\n          value: passwrd\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Kirjaudu Sis\\xE4\\xE4n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Login, \"ryLbH86yGl3Y9i3tptMeyv8CDUw=\", true);\n\n_c = Login;\n\nfunction App() {\n  _s2();\n\n  let [isupdated, setIsupdated] = useState(false); // For the components (Formbox & Databox) to know if the data has been updated\n\n  let [modifiedId, setModifiedId] = useState(); // For the components to know what observation would the user want to modify\n\n  let [token, setToken] = useState(false); // Major TODO's:\n  // Simple implementation of React router\n  // Fixing the barchart --DONE\n  // Exporting the barchart --DONE\n  // Visual appearance\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Kansanterveystieteen perusteet -Unip\\xE4iv\\xE4kirja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Kirjaudu ulos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Formbox, {\n              setIsupdated: setIsupdated,\n              modifiedId: modifiedId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Databox, {\n              isupdated: isupdated,\n              setModifiedId: setModifiedId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Footer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"A0swSqLWNyQKWmexJ6mRKyBXJ1w=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/App.js"],"names":["React","useState","Formbox","Databox","BrowserRouter","Router","Switch","Route","Link","Login","register","handleSubmit","watch","errors","reset","useForm","username","setUsername","passwrd","setPasswrd","onSubmit","data","console","log","auth","token","e","target","value","name","App","isupdated","setIsupdated","modifiedId","setModifiedId","setToken"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Formbox from './Formbox';\nimport Databox from './Databox';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction Login(){\n  const { register, handleSubmit, watch, errors, reset } = useForm();\n\n  let [username, setUsername] = useState('');\n  let [passwrd, setPasswrd] = useState('');\n\n\n  const onSubmit = data => {\n      data.username = username;\n      data.passwrd = passwrd;\n      console.log(data);\n\n      auth();\n      function auth(){\n          if(data.username === 'eerokos@uef.fi' && data.passwrd === '123'){\n              token = true;   \n              console.log(token);             \n          }\n      }\n  }\n\n  return (\n      <div className=\"box\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n              <label>Käyttäjätunnus:</label>\n              <input\n                  placeholder=\"@UEF.fi-sähköposti\"\n                  type=\"text\"\n                  onChange={(e) => setUsername(e.target.value)}\n                  value={username}\n                  ref={register({name: 'username', value: username})}></input>\n              <br></br>\n              <label>Salasana:</label>\n              <input\n                  type=\"password\"\n                  onChange={(e) => setPasswrd(e.target.value)}\n                  value={passwrd}\n                  ref={register({name: 'passwrd', value: passwrd})}></input>\n                  <br></br>\n              <button type=\"submit\">Kirjaudu Sisään</button>\n          </form>\n      </div>\n  );\n}\n\nfunction App() {\n\n  let [isupdated, setIsupdated] = useState(false); // For the components (Formbox & Databox) to know if the data has been updated\n  let [modifiedId, setModifiedId] = useState(); // For the components to know what observation would the user want to modify\n  let [token, setToken] = useState(false);\n\n  // Major TODO's:\n  // Simple implementation of React router\n  // Fixing the barchart --DONE\n  // Exporting the barchart --DONE\n  // Visual appearance\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/login'>\n          <Login token={token} />\n        </Route>\n        <Route path='/'>\n          <div className=\"container\">\n            <div className=\"header\">\n              <h4>Kansanterveystieteen perusteet -Unipäiväkirja</h4>\n              <button>Kirjaudu ulos</button>\n            </div>\n\n            <div className=\"content\">\n              <Formbox setIsupdated={setIsupdated} modifiedId={modifiedId} />\n              <Databox isupdated={isupdated} setModifiedId={setModifiedId} />\n            </div>\n\n            <div className=\"footer\"><h5>Footer</h5></div>\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}