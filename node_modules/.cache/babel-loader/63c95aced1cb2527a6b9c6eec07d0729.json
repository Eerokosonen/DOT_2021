{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport './content.css';\nimport Formbox from './Formbox';\nimport Databox from './Databox';\nimport { useForm } from \"react-hook-form\"; // Form validation module\n\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(token) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    reset\n  } = useForm();\n  let [Email, setUsername] = useState('');\n  let [passwrd, setPasswrd] = useState('');\n  let history = useHistory();\n\n  const onSubmit = data => {\n    data.passwrd = passwrd;\n    data.Email = Email.substring(0, Email.indexOf('@'));\n    console.log(data);\n    auth();\n\n    function auth() {\n      if (data.Email === 'eerokos' && data.passwrd === '123') {\n        history.push('/');\n      }\n    }\n  }; // Fetching data from the server\n\n\n  async function getData() {\n    fetch('http://localhost:3000/' + Email).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).then(data => {\n      setDataset(data);\n      setModifiedId();\n    }) // Set fetched data to an array\n    .catch(error => console.error('Error:', error));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"K\\xE4ytt\\xE4j\\xE4tunnus:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"@UEF.fi-s\\xE4hk\\xF6posti\",\n        name: \"Email\",\n        type: \"text\",\n        onChange: e => setUsername(e.target.value),\n        value: Email,\n        ref: register({\n          name: 'Email',\n          value: Email\n        }),\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Salasana:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"passwrd\",\n        type: \"password\",\n        onChange: e => setPasswrd(e.target.value),\n        value: passwrd,\n        ref: register({\n          name: 'passwrd',\n          value: passwrd\n        }),\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Kirjaudu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"/MScQb6oz8X+gRll2t8gb8uUHPY=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Login;\n\nfunction App() {\n  _s2();\n\n  let [isupdated, setIsupdated] = useState(false); // For the components (Formbox & Databox) to know if the data has been updated\n\n  let [modifiedId, setModifiedId] = useState(); // For the components to know what observation would the user want to modify\n\n  let [token, setToken] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Kansanterveystieteen perusteet -Unip\\xE4iv\\xE4kirja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Kirjaudu ulos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Formbox, {\n              setIsupdated: setIsupdated,\n              modifiedId: modifiedId,\n              Email: Email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Databox, {\n              isupdated: isupdated,\n              setModifiedId: setModifiedId,\n              Email: Email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Footer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"A0swSqLWNyQKWmexJ6mRKyBXJ1w=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/App.js"],"names":["React","useState","Formbox","Databox","useForm","BrowserRouter","Router","Switch","Route","Link","useHistory","Login","token","register","handleSubmit","watch","errors","reset","Email","setUsername","passwrd","setPasswrd","history","onSubmit","data","substring","indexOf","console","log","auth","push","getData","fetch","then","res","status","json","error","Error","setDataset","setModifiedId","catch","e","target","value","name","required","App","isupdated","setIsupdated","modifiedId","setToken"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport './content.css';\nimport Formbox from './Formbox';\nimport Databox from './Databox';\nimport { useForm } from \"react-hook-form\"; // Form validation module\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\nfunction Login(token) {\n  const { register, handleSubmit, watch, errors, reset } = useForm();\n\n  let [Email, setUsername] = useState('');\n  let [passwrd, setPasswrd] = useState('');\n  let history = useHistory();\n\n  const onSubmit = data => {\n    data.passwrd = passwrd;\n    data.Email = Email.substring(0, Email.indexOf('@'));\n    console.log(data);\n\n    auth();\n    function auth() {\n\n\n\n      if (data.Email === 'eerokos' && data.passwrd === '123') {\n        history.push('/')\n      }\n    }\n  }\n\n\n  // Fetching data from the server\n  async function getData() {\n    fetch('http://localhost:3000/' + Email)\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .then(data => { setDataset(data); setModifiedId(); }) // Set fetched data to an array\n      .catch(error => console.error('Error:', error))\n  }\n\n  return (\n    <div className=\"box\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label>Käyttäjätunnus:</label>\n        <input\n          placeholder=\"@UEF.fi-sähköposti\"\n          name=\"Email\"\n          type=\"text\"\n          onChange={(e) => setUsername(e.target.value)}\n          value={Email}\n          ref={register({ name: 'Email', value: Email })}\n          ref={register({ required: true })}\n        ></input>\n        <br></br>\n        <label>Salasana:</label>\n        <input\n          name=\"passwrd\"\n          type=\"password\"\n          onChange={(e) => setPasswrd(e.target.value)}\n          value={passwrd}\n          ref={register({ name: 'passwrd', value: passwrd })}\n          ref={register({ required: true })}\n        ></input>\n        <br></br>\n        <button type=\"submit\">Kirjaudu</button>\n      </form>\n    </div>\n  );\n}\n\nfunction App() {\n\n  let [isupdated, setIsupdated] = useState(false); // For the components (Formbox & Databox) to know if the data has been updated\n  let [modifiedId, setModifiedId] = useState(); // For the components to know what observation would the user want to modify\n  let [token, setToken] = useState(false);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/login'>\n          <Login token={token} />\n        </Route>\n        <Route path='/'>\n          <div className=\"container\">\n            <div className=\"header\">\n              <h4>Kansanterveystieteen perusteet -Unipäiväkirja</h4>\n              <Link to=\"/login\">Kirjaudu ulos</Link>\n            </div>\n\n            <div className=\"content\">\n              <Formbox setIsupdated={setIsupdated} modifiedId={modifiedId} Email={Email} />\n              <Databox isupdated={isupdated} setModifiedId={setModifiedId} Email={Email}/>\n            </div>\n\n            <div className=\"footer\"><h5>Footer</h5></div>\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}