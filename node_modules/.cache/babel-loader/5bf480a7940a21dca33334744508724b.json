{"ast":null,"code":"var _jsxFileName = \"/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Formbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './content.css';\nimport DatePicker from 'react-datepicker';\nimport { registerLocale } from \"react-datepicker\";\nimport fi from 'date-fns/locale/fi';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\nimport InputRange from 'react-input-range';\nimport \"react-input-range/lib/css/index.css\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale('fi', fi);\n/**\nNaming policy:\n\nEmail\npassword\nObsId\ntoSleep\nfromSleep\ntotalHours\nrange \ndesc\n \n*/\n\n/*\nNode.js json-server to read and write a local JSON file\n*/\n\nfunction Formbox() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm(); //Data collected on the form:\n\n  let [tosleep, setTosleep] = useState(new Date());\n  let formattedtosleep = moment(tosleep).format(\"DD.MM.YYYY HH:mm\");\n  let [fromsleep, setFromsleep] = useState(new Date());\n  let formattedfromsleep = moment(fromsleep).format(\"DD.MM.YYYY HH:mm\");\n  let [range, setRange] = useState(1);\n  let [desc, setDesc] = useState('');\n  let [Email, setEmail] = useState('eerokos'); // total sleeping hours\n\n  let totalHours = String(fromsleep - tosleep);\n\n  const onSubmit = data => {\n    data.tosleep = formattedtosleep;\n    data.fromsleep = formattedfromsleep;\n    data.range = range;\n    data.desc = desc;\n    console.log('submittia = ' + JSON.stringify(data));\n    addObs(data);\n\n    async function addObs(data) {\n      await fetch('http://localhost:3000/' + Email, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {}\n      }).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"K\\xE4vin nukkumaan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: tosleep,\n        onChange: e => setTosleep(e),\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        dateFormat: \"Pp\",\n        locale: \"fi\",\n        timeIntervals: 15,\n        ref: register({\n          name: 'tosleep',\n          value: formattedtosleep\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Her\\xE4sin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: fromsleep,\n        onChange: e => setFromsleep(e),\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        dateFormat: \"Pp\",\n        locale: \"fi\",\n        timeIntervals: 15,\n        ref: register({\n          name: 'fromsleep',\n          value: formattedfromsleep\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Unen laatu:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputRange, {\n        value: range,\n        name: \"range\",\n        onChange: e => setRange(e),\n        maxValue: 5,\n        minValue: 1,\n        ref: register({\n          name: 'range',\n          value: range\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sanallinen arvio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"desc\",\n        onChange: e => setDesc(e.target.value),\n        ref: register({\n          name: 'desc',\n          value: desc\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Tallenna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Formbox, \"M1pJGS/LCe597HnSpo6goQW4W8o=\", false, function () {\n  return [useForm];\n});\n\n_c = Formbox;\nexport default Formbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formbox\");","map":{"version":3,"sources":["/Users/eerokosonen/Documents/Koulu /3.vsk/DOT/Project/projectapp/src/Formbox.js"],"names":["React","useState","DatePicker","registerLocale","fi","moment","InputRange","useForm","Formbox","register","handleSubmit","watch","errors","tosleep","setTosleep","Date","formattedtosleep","format","fromsleep","setFromsleep","formattedfromsleep","range","setRange","desc","setDesc","Email","setEmail","totalHours","String","onSubmit","data","console","log","JSON","stringify","addObs","fetch","method","body","headers","then","res","status","json","error","Error","catch","e","name","value","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './content.css';\n\nimport DatePicker from 'react-datepicker';\nimport { registerLocale } from \"react-datepicker\";\nimport fi from 'date-fns/locale/fi';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport moment from 'moment';\n\nimport InputRange from 'react-input-range';\nimport \"react-input-range/lib/css/index.css\";\n\nimport { useForm } from \"react-hook-form\";\n\nregisterLocale('fi', fi);\n\n/**\nNaming policy:\n\nEmail\npassword\nObsId\ntoSleep\nfromSleep\ntotalHours\nrange \ndesc\n \n*/\n\n/*\nNode.js json-server to read and write a local JSON file\n*/\n\nfunction Formbox() {\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  //Data collected on the form:\n  let [tosleep, setTosleep] = useState(new Date());\n  let formattedtosleep = moment(tosleep).format(\"DD.MM.YYYY HH:mm\");\n\n  let [fromsleep, setFromsleep] = useState(new Date());\n  let formattedfromsleep = moment(fromsleep).format(\"DD.MM.YYYY HH:mm\");\n  let [range, setRange] = useState(1);\n  let [desc, setDesc] = useState('');\n\n  let [Email, setEmail] = useState('eerokos');\n\n  // total sleeping hours\n  let totalHours = String(fromsleep - tosleep);\n\n  const onSubmit = data => {\n    data.tosleep = formattedtosleep;\n    data.fromsleep = formattedfromsleep;\n    data.range = range;\n    data.desc = desc;\n    console.log('submittia = ' + JSON.stringify(data));\n\n    addObs(data);\n    async function addObs(data) {\n      await fetch('http://localhost:3000/' + Email, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          \n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            return res.json();\n          } else {\n            const error = new Error(res.error);\n            throw error;\n          }\n        })\n        .catch(e => {\n          console.log(e);\n          \n      });\n\n    }\n  }\n\n  return (\n    <div className=\"box\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label>Kävin nukkumaan:</label>\n        <DatePicker\n          selected={tosleep}\n          onChange={e => setTosleep(e)}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          dateFormat=\"Pp\"\n          locale=\"fi\"\n          timeIntervals={15}\n          ref={register({ name: 'tosleep', value: formattedtosleep })}\n        />\n\n        <label>Heräsin:</label>\n        <DatePicker\n          selected={fromsleep}\n          onChange={e => setFromsleep(e)}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          dateFormat=\"Pp\"\n          locale=\"fi\"\n          timeIntervals={15}\n          ref={register({ name: 'fromsleep', value: formattedfromsleep })}\n        />\n        <br></br>\n        <label>Unen laatu:</label>\n        <InputRange\n          value={range}\n          name=\"range\"\n          onChange={e => setRange(e)}\n          maxValue={5}\n          minValue={1}\n          ref={register({ name: 'range', value: range })}\n        />\n\n        <label>Sanallinen arvio:</label><br></br>\n        <textarea\n          name=\"desc\"\n          onChange={(e) => setDesc(e.target.value)}\n          ref={register({ name: 'desc', value: desc })}\n        ></textarea>\n\n        <button type=\"submit\">Tallenna</button>\n\n      </form>\n\n\n    </div>\n  );\n}\n\nexport default Formbox;"]},"metadata":{},"sourceType":"module"}